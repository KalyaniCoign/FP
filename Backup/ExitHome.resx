<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCABSAHsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3GiiigAooooAKKKinuI4FJdgMe9DdgJaKx73V0gGXlSIds9T+
        HX9BWLN4ntwxAviD9QP61k60UVyM7KiuRt/Ejkgx3CyD0dR/MVr2OvW07COfELngEnKn8aqNSLBxaNei
        iirJCiiigAooooAKKKKACiiigCrqF4lnAXbJY4CqoySTwAB3JP8AnrXE6nrc8t01vZlWuF/1kucpB7Ke
        59W79qn8X6wYQ5iJMjN5MOOoYj5iPcAgD3Y1iWqx6da7jhmzx/tv3P0HQVyVKl3oZ4isqEfNk5s4Y086
        +czO3OZj1+i/41Gb+BPljiQL7KBWZPcSTyF5WLMfWo91c7l2PBq4qc3uaZks5zl4EVv7yDaw/Ec02V5b
        VCxcz2v8RP34x6n1Hv8A/rrO3VcsJszIjsVVjjd6UJs0oY2pTludl4S1eRyLK4feu3dDJnqv/wBbI+mR
        26dVXnOkL9i1RLTAEcjb4PSOQcFf90g4x6N7V6Fbv5kKsO4rupSurM95SU4qS6klFFFagFFFFABRRRQA
        VDeP5VpNJ/djY/pU1VtRjaXT7mNPvPEyr9SDik9gR5Jqt59o1ayGcqqPL+PzH+ePyp91NuKRk/KqjHsa
        wLJri9uraWKJ3ULJEzAcDg4/pWoJBIof1Feczys2k1UsKxwSKbmgsCPpTeT24qTxmx45qXO3gde9RJkZ
        IHP8qUUDRuXcx+zWl2D86tG2fcHaf516NYNuiOOmSR+PP9a8suXLWdtbjlndFx+O7+lelaG/mWjOORvI
        H4cf0rqovU+lwbboamlRRRXUdAUUUUAFFFFABRRRQB4t4rtNY0vxLeRRqosf9fbZ+VcdQPU4ORj2HrUO
        k6gjwrl1j8x2LDzNpT7uQPxz9RXp3jjw2PE2hy2kU3kXQGYZfQ/3T32nocfXtivCEe502/l0vWYWtr6N
        grLJwH9CD79iOD29K5asGtUYYvD/AFiHu/Ejtma3YLkxkBQCTwcY7e+aA0ASVcxAHHl8nnr97/P6VgLd
        PAAsnzD3OCPx6H8KnS8Tujj6qa59T52pGpTlacbG45igEo2xBtpCqCTkcdffNCPaRzKwMe0OMcktnd/L
        FYrXe84CsGPQvxmqd7fR2qFriQqxHQcM3so7fU/pTV2b0KFWtK0Y6dzo2u1MqSwCNpgwjtlQ5LSt97I9
        FwPwB9a9V0i0+w6bb25+8iAMT3NcF8N/DF08qa9rMPknbiztSP8AVqf4iP8AP5Yr0muylCyuz6KMVCKg
        ugUUUVqAUUUUAFFFFABRRRQAVi+JvC2k+JrYQ6pbbnUERzxnbJHn+639DkH0raooA8avvhZ4g0xmOhap
        DeW/aG4+RgPTuD+a/SstvCnjNCVfw7A57MjxYP8A49XvNFZulFlczPEbLwF40vDslSx0yM9WLqSPwXdn
        8xXceFvhtpWiSpd30janfqciWdflQ/7K8/mScdsV21FOMIrYHJsKKKKskKKKKACiiigAooooAKKKKACi
        iigAooooAKKKKACiiigAooooAKKKKAP/2Q==
</value>
  </data>
</root>